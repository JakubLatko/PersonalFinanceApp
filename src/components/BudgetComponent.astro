---
import BudgetTransaction from "./BudgetTransaction.astro";

interface Props {
	label: string;
	maximum: number;
	spent: number;
	theme: string;
}
const { label, maximum, spent, theme } = Astro.props;

import data from "../data.json";
import type TransactionType from "@lib/transaction";

let transactions: TransactionType[] = [];
data.transactions.forEach((transaction) => {
	if (transactions.length == 3) return;
	if (transaction.category === label) {
		transactions.push(transaction);
	}
});
---

<div class="container">
	
	<div class="header">
		<span class="accentDot" style=`background-color: ${theme}`></span>
		<h2>{label}</h2>
		<button aria-label="Open budget menu" class=`budgetMenuBtn${label} budgetMenuBtn`><img src="/images/icon-ellipsis.svg" alt="" /></button>
		<div class=`budgetMenu${label} budgetMenu`>
			<button class="editDialogBtn">Edit Budget</button>
			<button class="deleteDialogBtn">Delete Budget</button>
		</div>
	</div>
	
	<h3 class="maximum">Maximum of ${maximum.toFixed(2)}</h3>
	<span class="bar">
		<span
			style=`background-color: ${theme}; width: ${(spent / maximum) * 100}% `
			class="progress"></span>
	</span>
	<div class="amounts">
		<div>
			<span style=`background-color: ${theme}`></span>
			<div class="spent">
				<p>Spent</p>
				<h3>${spent.toFixed(2)}</h3>
			</div>
		</div>
		<div>
			<span></span>
			<div class="free">
				<p>Remaining</p>
				<h3>${(maximum - spent).toFixed(2)}</h3>
			</div>
		</div>
	</div>
	<p id="myVar" style="display:none;">{label}</p>
	<div class="latestSpending">
		<div class="sectionHeader">
			<h2>Latest spending</h2>
			<a href={"/transactions?category=" + label + "&sorting=Latest"}
				>See All <img src="/images/icon-caret-right.svg" alt="" /></a
			>
		</div>

		<div class="transactions">
			{
				transactions.map((transaction) => (
					<hr/>
					<BudgetTransaction transaction={transaction} imageHidden={true} />
				))
			}
		</div>
	</div>
</div>
<dialog class="editDialog">
	<div class="dialogWrapper">
	<div class="dialogHeader">
		<h2>Edit Budget</h2>
		<button class="closeEditDialog"><img src="/images/icon-close.svg" alt="Close window" /></button>
	</div>
	<p>
		Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus  hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet.
	</p>
	<form class="dialogForm">
		<div>
			<label for=`budgetCategory${label}`>Budget Category</label>
			<select name=`budgetCategory${label} budgetCategory` id=`budgetCategory${label}`>
				<option selected={label === "Entertainment" ? true : false} value="Entertainment">Entertainment</option>
				<option selected={label === "Bills" ? true : false} value="Bills">Bills</option>
				<option selected={label === "Groceries" ? true : false} value="Groceries">Groceries</option>
				<option selected={label === "Dining Out" ? true : false} value="Dining Out">Dining Out</option>
				<option selected={label === "Transportation" ? true : false} value="Transportation">Transportation</option>
				<option selected={label === "Personal Care" ? true : false} value="Personal Care">Personal Care</option>
				<option selected={label === "Education" ? true : false} value="Education">Education</option>
				<option selected={label === "Lifestyle" ? true : false} value="Lifestyle">Lifestyle</option>
				<option selected={label === "Shopping" ? true : false} value="Shopping">Shopping</option>
				<option selected={label === "General" ? true : false} value="General">General</option>
			</select>
		</div>
		<div>
			<label for=`maximumSpend${label}`>Maximum Spend</label>
			<input type="number" name=`maximumSpend${label}` id=`maximumSpend${label}` placeholder="$ e.g 2000" value={String(maximum)}/>
		</div>
		<div>
			<label for=`theme${label}`>Theme</label>
			<select name=`theme${label}` id=`theme${label}`>
				<option selected={label === "Green" ? true : null} value="Green">Green</option>
				<option selected={label === "Yellow" ? true : null} value="Yellow">Yellow</option>
				<option selected={label === "Cyan" ? true : null} value="Cyan">Cyan</option>
				<option selected={label === "Navy" ? true : null} value="Navy">Navy</option>
				<option selected={label === "Red" ? true : null} value="Red">Red</option>
				<option selected={label === "Purple" ? true : null} value="Purple">Purple</option>
				<option selected={label === "Turquoise" ? true : null} value="Turquoise">Turquoise</option>
				<option selected={label === "Brown" ? true : null} value="Brown">Brown</option>
				<option selected={label === "Magenta" ? true : null} value="Magenta">Magenta</option>
				<option selected={label === "Blue" ? true : null} value="Blue">Blue</option>
				<option selected={label === "Navy Grey" ? true : null} value="Navy Grey">Navy Grey</option>
				<option selected={label === "Army Green" ? true : null} value="Army Green">Army Green</option>
				<option selected={label === "Pink" ? true : null} value="Pink">Pink</option>
				<option selected={label === "Gold" ? true : null} value="Gold">Gold</option>
				<option selected={label === "Orange" ? true : null} value="Orange">Orange</option>
			</select>
		</div>
		<button>Save changes</button>
	</form>
	
</div>
</dialog>
<dialog class="deleteDialog">
	<div class="dialogWrapper">
		<div class="dialogHeader">
			<h2>Delete '{label}'?</h2>
			<button class="deleteDialogClose"><img src="/images/icon-close.svg" alt="Close window" /></button>
		</div>
		<p>
			Are you sure you want to delete this budget? This action cannot be reversed, and all the data inside it will be removed forever.
		</p>
		<form class="buttons">
			<button type="submit">Yes, confirm deletion</button>
			<button class="cancelBtn" type="button">No, I want to go back</button>
		</form>
	</div>
	
</dialog>


<style lang="scss">
	.container {
		display: flex;
		flex-direction: column;
		background-color: var(--primary-900);
		padding: 1.25rem;
		gap: 1rem;
		border-radius: 0.75rem;
	}
	.header {
		display: flex;
		align-items: center;
		position: relative;
		button {
			border: 0;
			background-color: transparent;
			width: fit-content;
			padding: 0.5rem;
			height: auto;
			margin-left: auto;
			cursor: pointer;
			img {
				object-fit: contain;
				width: 1.25rem;
				height: auto;
			}
		}
	}
	.bar {
		width: 100%;
		height: 2rem;
		background-color: var(--neutral-light-beige);
		border-radius: 0.25rem;
		padding: 0.25rem;
		.progress {
			height: 100%;
			border-radius: 0.25rem;
			max-width: 100%;
			display: block;
		}
	}
	.budgetMenu{
		display: none;
		flex-direction: column;
		border-radius: .5rem;	
		position: absolute;
		background-color: var(--primary-900);
		z-index: 100;
		top: 100%;
		right: 0;
		border: 1px solid var(--neutral-dark-grey);
		box-shadow: 0px 0px 15px 0px var(--neutral-dark-grey);
		button{
			width: 100%;
			background-color: transparent;
			color: var(--primary-100);
			border: 0;
			padding: .5rem;
			border-radius: 0.25rem;
			transition: 150ms linear;
			&:first-of-type{
				border-bottom: 1px solid var(--neutral-grey);
			}
			&:hover, &:active, &:focus{
				background-color: var(--neutral-dark-grey);
				color: var(--primary-900);
				transition: 150ms linear;
			}
		}
	}
	.budgetMenuVisible{
		display: flex;
	}

	dialog {
		border: 0;
		border-radius: 0.75rem;
	}

	.dialogWrapper {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		p {
			font-size: var(--fs-body-sm);
			color: var(--neutral-dark-grey);
			line-height: 150%;
		}
	}
	.dialogHeader {
		display: flex;
		justify-content: space-between;
		align-items: center;
		h2 {
			font-size: var(--fs-heading-2);
			color: var(--primary-100);
		}
		button {
			display: grid;
			place-items: center;
			border-radius: 50%;
			width: 1.5rem;
			height: 1.5rem;
			aspect-ratio: 1;
			border: 1px solid var(--neutral-dark-grey);
			background-color: transparent;
			&:focus, &:active, &:hover {
				cursor: pointer;

			}
		}
	}
	
	.dialogForm {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		select,
		option {
			max-height: 200px;

			overflow-y: auto;
			&:focus, &:active, &:hover {
				cursor: pointer;
				
			}
		}
		div {
			display: flex;
			flex-direction: column;
			label {
				font-size: var(--fs-smallest);
				color: var(--neutral-dark-grey);
			}
			input,
			select {
				padding: 0.5rem;
				border-radius: 0.5rem;
				border: 1px solid var(--neutral-dark-grey);
				font-size: var(--fs-body-sm);
				&:focus, &:active, &:hover {
				cursor: pointer;
				
			}
			}
		}

		button {
			background-color: var(--primary-100);
			color: var(--primary-900);
			border-radius: 0.5rem;
			border: 0;
			cursor: pointer;
			padding-block: 1em;
			font-size: var(--fs-body-sm);
			font-weight: var(--fw-bold);
			margin-top: 1rem;
			&:focus, &:active, &:hover {
				cursor: pointer;
				
			}
		}
	}
	.buttons{
		button{
			display: flex;
			flex-direction: column;
			background-color: transparent;
			border-radius: 0.5rem;
			border: 0;
			width: 100%;
			text-align: center;
			font-size: var(--fs-body-sm);
			font-weight: var(--fw-regular);
			padding: 1em;
			display: grid;
				place-items: center;
				&:focus, &:active, &:hover {
				cursor: pointer;
				
			}
			&:first-of-type{
				background-color: var(--secondary-red);
				color: var(--primary-900);
				font-weight: var(--fw-bold);
			}
		}
	}
	.deleteDialog{
		max-width: 300px;

	}
	.accentDot {
		width: 1rem;
		height: 1rem;
		border-radius: 100vw;
		margin-right: 0.5rem;
	}

	.maximum {
		font-size: var(--fs-body-sm);
		color: var(--neutral-dark-grey);
		font-weight: var(--fw-regular);
	}
	.amounts {
		display: flex;
		gap: 1rem;
		background-color: var(--primary-900);
		div {
			display: flex;
			flex-direction: row;
			gap: 0 1rem;
			width: calc(50% - 0.5rem);

			span {
				width: 0.25rem;
				border-radius: 100vw;
				min-height: 2rem;
				background-color: var(--neutral-light-beige);
			}
			.spent,
			.free {
				display: flex;
				flex-direction: column;
				gap: 0.25rem;
				p {
					font-size: var(--fs-smallest);
				}
				h3 {
					font-size: var(--fs-body-sm);
					font-weight: var(--fw-bold);
				}
			}
		}
	}
	.latestSpending {
		background-color: var(--neutral-light-beige);
		padding: 1rem;
		border-radius: 0.75rem;
	}
	.sectionHeader {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 1rem;
		
		a {
			font-size: var(--fs-body-sm);
			font-weight: var(--fw-regular);
			color: var(--neutral-dark-grey);
			opacity: 1;
			text-decoration: none;
			display: flex;
			align-items: center;
			gap: 0.5rem;
			img{
				object-fit: contain;
				width: .25rem;
			}
		}
		h2 {
			font-size: var(--fs-body);
			color: var(--primary-100);
		}
	}
	.transactions {
		
		hr{
			color: var(--neutral-dark-grey);
			opacity: .3;
			width: 100%;
			&:first-of-type {
				display: none;
			}
		}
	}

	dialog{
		max-width: 300px;
		button, input{
			cursor: pointer;
		}
	}

	@media screen and (min-width: 768px) {
		.container {
			padding: 2rem;
			gap: 1.25rem;
		}
		.latestSpending {
			padding: 1.5rem;
		}
		dialog{
		max-width: 300px;
	}
	}
	@media screen and (min-width: 1366px) {
		
	}
	@media screen and (min-width: 1920px) {
		.accentDot{
			width: 1.5rem;
			height: 1.5rem;
		}
		.header{
			h2{
				font-size: var(--fs-heading-1);
			}
		}
		.maximum{
			font-size: var(--fs-body);
		}
		.amounts{
			div{
				span{
					width: .5rem;
				}
				.spent,
				.free{
					p{
						font-size: var(--fs-body);
					}
					h3{
						font-size: var(--fs-body);
					}
				}
			}
		}
		.bar{
			height: 3rem;
		}
	}
</style>



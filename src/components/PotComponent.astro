---
import BudgetTransaction from "./BudgetTransaction.astro";

interface Props {
	label: string;
	saved: number;
	target: number;
	theme: string;
}
const { label, saved, target, theme } = Astro.props;

import data from "../data.json";
import type TransactionType from "@lib/transaction";

let transactions: TransactionType[] = [];
data.transactions.forEach((transaction) => {
	if (transactions.length == 3) return;
	if (transaction.category === label) {
		transactions.push(transaction);
	}
});
---

<div class="container">
	<div class="header">
		<span class="accentDot" style=`background-color: ${theme}`></span>
		<h2>{label}</h2>
		<button><img src="/images/icon-ellipsis.svg" alt="" /></button>
	</div>
	<div class="totalSaved">
		<h3 class="maximum">Total saved</h3>
		<h2 class="totalSaved">${saved.toFixed(2)}</h2>
	</div>

	<span class="bar">
		<span
			style=`background-color: ${theme}; width: ${(saved / target) * 100}% `
			class="progress"></span>
	</span>
	<div class="percentageTarget">
		<h3 class="percentage">{((saved / target) * 100).toFixed(2)}%</h3>
		<h3 class="target">Target of ${target.toFixed(2)}</h3>
	</div>
	<div class="buttons">
		<button>+ Add Money</button>
		<button>Withdraw</button>
	</div>
</div>

<style lang="scss">
	.container {
		display: flex;
		flex-direction: column;
		background-color: var(--primary-900);
		padding: 1.25rem;
		gap: 1rem;
		border-radius: 0.75rem;
	}
	.header {
		display: flex;
		align-items: center;
		button {
			border: 0;
			background-color: transparent;
			width: fit-content;
			padding: 0.5rem;
			height: auto;
			margin-left: auto;
			img {
				object-fit: contain;
				width: 1.25rem;
				height: auto;
			}
		}
		h2 {
			font-size: var(--fs-heading-2);
		}
	}

	.bar {
		width: 100%;
		height: 0.5rem;
		background-color: var(--neutral-light-beige);
		border-radius: 0.25rem;

		.progress {
			height: 100%;
			border-radius: 0.25rem;
			max-width: 100%;
			display: block;
		}
	}

	.totalSaved {
		display: flex;
		justify-content: space-between;
		align-items: center;
		h3 {
			font-size: var(--fs-body-sm);
			color: var(--neutral-dark-grey);
			font-weight: var(--fw-regular);
		}
		h2 {
			font-size: var(--fs-heading-1);
		}
	}
	.percentageTarget {
		display: flex;
		justify-content: space-between;
		.percentage,
		.target {
			font-size: var(--fs-smallest);
			color: var(--neutral-dark-grey);
		}
		.percentage {
			font-weight: var(--fw-bold);
		}
		.target {
			font-weight: var(--fw-regular);
		}
	}
	.buttons {
		display: flex;
		justify-content: space-between;
		gap: 1rem;
		margin-block: 2rem;
		button {
			width: calc(50% - 0.5rem);
			border: 0;
			background-color: var(--neutral-light-beige);
			font-weight: var(--fw-bold);
			color: var(--primary-100);
			font-size: var(--fs-body-sm);
			padding: 1rem;
			border-radius: 0.5rem;
		}
	}
	.accentDot {
		width: 1rem;
		height: 1rem;
		border-radius: 100vw;
		margin-right: 0.5rem;
	}

	@media screen and (min-width: 768px) {
		.container {
			padding: 2rem;
			gap: 1.25rem;
		}
		.buttons {
			margin-block: 2rem 1rem;
		}
	}

	@media screen and (min-width: 1920px) {
		.accentDot {
			width: 1.5rem;
			height: 1.5rem;
		}
		.header {
			h2 {
				font-size: var(--fs-heading-1);
			}
		}

		.bar {
			height: 3rem;
		}
	}
</style>

---
import { Image } from "astro:assets";
import recurringDate from "@lib/recurring-date.ts";
const { transaction } = Astro.props;

const date = new Date("2024-08-03T22:00:00.000Z"); // "";
const transactionDate = new Date(transaction.date);
const dayInMilliseconds = 24 * 60 * 60 * 1000;
let daysDiff = Math.floor(
	(transactionDate.getDate() - date.getDate()) / dayInMilliseconds
);

const todaysDateAsDay = date.getDate();
const billAsDay = transactionDate.getDate();

let billPaid: boolean = false;
let billDue: boolean = false;
if (todaysDateAsDay > billAsDay && Math.abs(daysDiff) < 5) {
	billPaid = true;
}

if (billAsDay > todaysDateAsDay && Math.abs(daysDiff) < 5) {
	billDue = true;
}

console.log({
	billAsDay,
	todaysDateAsDay,
	daysDiff,
	billPaid,
	billDue,
});

interface Props {
	transaction: Transaction;
	categoryHidden?: boolean;
	imageHidden?: boolean;
}

interface Transaction {
	avatar: string;
	name: string;
	category: string;
	date: string;
	amount: number;
	recurring: boolean;
}
---

<div class="container">
	<div>
		<div class="nameAndCat">
			<Image src={transaction.avatar} alt={""} width={100} height={100} />
			<h2>{transaction.name}</h2>
		</div>
		<div class="monthlyWrapper">
			<h3 class="monthly">Monthly - {recurringDate(transaction.date)}</h3>
			{billPaid ? <img src="/images/icon-bill-paid.svg" alt="" /> : null}
			{billDue ? <img src="/images/icon-bill-due.svg" alt="" /> : null}
		</div>
	</div>

	<div class="dateAndAmount">
		<h2>
			${(transaction.amount * -1).toFixed(2)}
		</h2>
	</div>
</div>

<style lang="scss">
	.container {
		display: flex;
		align-items: center;
		border-bottom: 1px solid var(--neutral-light-grey);
		padding-block: 1rem;
	}
	img {
		border-radius: 100vw;
		object-fit: contain;
		width: 2rem;
		height: 2rem;
		margin-right: 0.5rem;
	}

	.nameAndCat,
	.dateAndAmount {
		h2 {
			font-size: var(--fs-body-sm);
			font-weight: var(--fw-bold);
			color: var(--primary-100);
		}
	}
	.nameAndCat {
		display: flex;
		align-items: center;
		font-weight: var(--fw-bold);
	}
	.dateAndAmount {
		display: flex;
		flex-direction: column-reverse;
		text-align: right;
		margin-left: auto;
	}
	h2,
	h3 {
		font-size: var(--fs-smallest);
	}
	.monthly {
		color: var(--secondary-green);
		font-weight: var(--fw-regular);
		font-size: var(--fs-smallest);
	}
	.monthlyWrapper {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		img {
			object-fit: contain;
			width: 1rem;
		}
	}

	@media only screen and (min-width: 768px) {
		.container {
			// display: grid;
			// grid-template-columns: auto repeat(6, 1fr);
			// gap: 0.5rem;
			display: flex;
			flex-direction: row;
		}

		.hidden {
			display: block;
		}
		.nameAndCat {
			margin-left: 1rem;
		}
		.nameAndCat,
		.dateAndAmount {
			display: flex;
			flex-direction: column-reverse;
			text-align: initial;
			h3 {
				margin-inline: 2rem;
			}
		}
		.dateAndAmount {
			text-align: right;
			h3 {
				margin-inline: 0;
			}
		}
	}
	@media only screen and (min-width: 1366px) {
		.nameAndCat {
			h3 {
				margin: 0;
				text-align: left;
				margin-right: 1rem;
				min-width: 100px;
			}
		}
		img {
			width: 2.5rem;
			height: 2.5rem;
			aspect-ratio: 1 / 1;
		}
	}
	@media screen and (min-width: 1920px) {
		.nameAndCat {
			h2,
			h3 {
				font-size: var(--fs-body);
			}
		}
		.dateAndAmount {
			h2 {
				font-size: var(--fs-body);
			}
			h3 {
				font-size: var(--fs-body-sm);
			}
		}
	}
</style>
